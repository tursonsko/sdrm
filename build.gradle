
plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.siouan.frontend-jdk11' version '6.0.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate:hibernate-core:5.4.2.Final'
    implementation 'org.springframework.data:spring-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.auth0:java-jwt:3.8.3'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.5.6'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.6'
    runtimeOnly 'org.postgresql:postgresql:42.2.24'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.6'
    implementation 'joda-time:joda-time:2.10.13'
    testImplementation "org.powermock:powermock-core:1.7.3"
    testImplementation "org.powermock:powermock-module-junit4:1.7.3"
    testImplementation "org.powermock:powermock-api-mockito2:1.7.3"
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.hamcrest:hamcrest-core:2.2'
}

group = 'pjatk'
version = '0.0.1-SNAPSHOT'
description = 'sdrm'
sourceCompatibility = "11"

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}


bootJar{
    dependsOn("installNode")
    dependsOn("assembleFrontend")
    dependsOn("publishFrontend")
}

bootRun{
    dependsOn("installNode")
    dependsOn("assembleFrontend")
    dependsOn("publishFrontend")
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

frontend {
    nodeVersion = '16.13.1'
    assembleScript = 'run build:ext'
    cleanScript = 'run clean:ext'
    checkScript = 'run check'
    packageJsonDirectory = file("frontend")
}
targetCompatibility = JavaVersion.VERSION_11
